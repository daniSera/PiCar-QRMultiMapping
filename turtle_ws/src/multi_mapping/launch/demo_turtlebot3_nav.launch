<?xml version="1.0"?>
<launch>
  <!--
    $ sudo apt install ros-melodic-turtlebot3* ros-melodic-dwa-local-planner
    To avoid TF warning about leading '/' in frame name, remove it in:
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/global_costmap_params.yaml"
       - "/opt/ros/melodic/share/turtlebot3_navigation/param/local_costmap_params.yaml"

    Example Gazebo:
    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch turtlebot3_gazebo turtlebot3_world.launch

    $ export TURTLEBOT3_MODEL=waffle
    $ roslaunch rtabmap_demos demo_turtlebot3_navigation.launch
  -->

  <!-- Arguments -->
  <arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
  <arg name="open_rviz" default="false"/> <!-- set true fpr more visualization-->
  <arg name="rtabmap_viz" default="false"/> <!-- set true fpr more visualization-->
  <arg name="move_forward_only" default="false"/>

  <arg name="with_camera" default="true"/>
  <arg name="localization" default="false"/>
  <arg name="database_path_0" default="~/.ros/rtabmap_0.db"/>
  <arg name="database_path_1" default="~/.ros/rtabmap_1.db"/>
  <arg     if="$(arg localization)" name="rtabmap_args" default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args" default="-d"/>

  <!-- Turtlebot3 -->
  
  <!--
  <include file="$(find turtlebot3_bringup)/launch/turtlebot3_remote.launch">
    <arg name="model" value="$(arg model)" />
  </include>
  -->

  <group ns="rtabmap_0">
    <node if="$(eval model=='waffle')" pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="log">
      <remap from="rgb/image"         to="/tb3_0/camera/rgb/image_raw"/>
      <remap from="depth/image"       to="/tb3_0/camera/depth/image_raw"/>
      <remap from="rgb/camera_info"   to="/tb3_0/camera/rgb/camera_info"/>
      <remap from="rgbd_image"        to="rgbd_image"/> <!-- output -->
      <param name="approx_sync"       value="false"/> 
    </node>

    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="log" args="$(arg rtabmap_args)">
      <param name="database_path"           type="string" value="$(arg database_path_0)"/>
      <param name="frame_id"                type="string" value="/tb3_0/base_footprint"/>
      <param name="subscribe_depth"         type="bool"   value="false"/>
      <param name="subscribe_rgb"           type="bool"   value="false"/>
      <param name="subscribe_rgbd"          type="bool"   value="true"/>
      <param name="gen_depth"               type="bool"   value="true"/>
      <param name="gen_depth_decimation"    type="int"    value="4"/>
      <param name="approx_sync"             type="bool"   value="false"/>
      <param name="queue_size"              type="int"    value="10"/>

      <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <param name="Mem/ImagePreDecimation"  type="int" value="2"/>
      <param name="Mem/ImagePostDecimation"  type="int" value="2"/> 
      <param name="Odom/ImageDecimation"  type="int" value="2"/>
      <param name="Kp/MaxDepth" type="string" value="2"/>
      <param name="Mem/ReduceGraph" type="bool" value="true"/>
      <param name="Rtabmap/DetectionRate"        type="string" value="2"/>
      <param name="Grid/RayTracing"              type="string" value="true"/>
      <param name="Grid/CellSize"                type="string" value="0.05"/>

      <!-- inputs -->
      <remap from="odom"            to="/tb3_0/odom"/>

      <!-- output -->
      <remap from="grid_map" to="/tb3_0/map"/>
      

      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"                 type="string" value="1"/>
      <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="GridGlobal/MinSize"           type="string" value="20"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
    </node>

    <!-- visualization with rtabmap_viz -->
    <node if="$(arg rtabmap_viz)" pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_scan"   type="bool"   value="true"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="/tb3_0/base_footprint"/>
      <param name="approx_sync"      type="bool"   value="true"/>

      <remap from="odom"            to="/tb3_0/odom"/>
      <remap from="scan"            to="/tb3_0/scan"/>
    </node>
  </group>

  <group ns="rtabmap_1">
    <node if="$(eval model=='waffle')" pkg="rtabmap_sync" type="rgbd_sync" name="rgbd_sync" output="log">
      <remap from="rgb/image"         to="/tb3_1/camera/rgb/image_raw"/>
      <remap from="depth/image"       to="/tb3_1/camera/depth/image_raw"/>
      <remap from="rgb/camera_info"   to="/tb3_1/camera/rgb/camera_info"/>
    </node>

    <node name="rtabmap" pkg="rtabmap_slam" type="rtabmap" output="log" args="$(arg rtabmap_args)">
      <param name="database_path"       type="string" value="$(arg database_path_1)"/>
      <param name="frame_id"            type="string" value="/tb3_1/base_footprint"/>
      <param name="subscribe_depth"         type="bool"   value="false"/>
      <param name="subscribe_rgb"           type="bool"   value="false"/>
      <param name="subscribe_rgbd"          type="bool"   value="true"/>
      <param name="gen_depth"               type="bool"   value="true"/>
      <param name="gen_depth_decimation"    type="int"    value="4"/>
      <param name="approx_sync"             type="bool"   value="false"/>
      <param name="queue_size"              type="int"    value="10"/>

      <param name="RGBD/AngularUpdate"        type="string" value="0.01"/>
      <param name="RGBD/LinearUpdate"         type="string" value="0.01"/>
      <param name="RGBD/OptimizeFromGraphEnd" type="string" value="false"/>
      <param name="Mem/ImagePreDecimation"  type="int" value="2"/>
      <param name="Mem/ImagePostDecimation"  type="int" value="2"/> 
      <param name="Odom/ImageDecimation"  type="int" value="2"/>
      <param name="Kp/MaxDepth" type="string" value="2"/>
      <param name="Mem/ReduceGraph" type="bool" value="true"/>
      <param name="Rtabmap/DetectionRate"        type="string" value="2"/>
      <param name="Grid/RayTracing"              type="string" value="true"/>
      <param name="Grid/CellSize"                type="string" value="0.05"/>
      <!--
      <param name="subscribe_rgb"   type="bool" value="false"/>
      <param name="subscribe_depth" type="bool" value="false"/>
      <param     if="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="true"/>
      <param unless="$(eval model=='waffle')" name="subscribe_rgbd" type="bool" value="false"/>
      <param name="subscribe_scan"      type="bool"   value="true"/>
      <param name="approx_sync"         type="bool"   value="true"/>
      <param name="gen_depth_decimation" type="double"   value="10"/>
      -->

      <!--<param name="gen_depth"               type="bool"   value="true"/>
      <param name="gen_depth_decimation"    type="int"    value="5"/>-->

      <!-- use actionlib to send goals to move_base -->
      <!--<remap from="move_base"            to="/tb3_1/move_base"/>-->

      <!-- inputs -->
      <remap from="odom"            to="/tb3_1/odom"/>

      <!-- output -->
      <remap from="grid_map" to="/tb3_1/map"/>
      

      <!-- RTAB-Map's parameters -->
      <param name="Reg/Strategy"                 type="string" value="1"/>
      <param name="Reg/Force3DoF"                type="string" value="true"/>
      <param name="GridGlobal/MinSize"           type="string" value="20"/>

      <!-- localization mode -->
      <param     if="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="false"/>
      <param unless="$(arg localization)" name="Mem/IncrementalMemory" type="string" value="true"/>
    </node>

    <!-- visualization with rtabmap_viz -->
    <node if="$(arg rtabmap_viz)" pkg="rtabmap_viz" type="rtabmap_viz" name="rtabmap_viz" args="-d $(find rtabmap_demos)/launch/config/rgbd_gui.ini" output="screen">
      <param name="subscribe_scan"   type="bool"   value="true"/>
      <param name="subscribe_odom"   type="bool"   value="true"/>
      <param name="frame_id"         type="string" value="/tb3_1/base_footprint"/>
      <param name="approx_sync"      type="bool"   value="true"/>

      <remap from="odom"            to="/tb3_1/odom"/>
      <remap from="scan"            to="/tb3_1/scan"/>
    </node>
  </group>

  <!-- move_base -->
  <include file="$(find turtlebot3_navigation)/launch/move_base.launch">
    <arg name="model" value="$(arg model)" />
    <arg name="move_forward_only" value="$(arg move_forward_only)"/>
  </include>

  <!-- rviz -->
  <group if="$(arg open_rviz)">
    <node pkg="rviz" type="rviz" name="rviz" required="true"
          args="-d $(find multi_mapping)/rviz/multiple_rtab_pseudo_merge.rviz"/>
  </group>

  <!-- Run the multirobot_map_merging node -->
  <node pkg="multirobot_map_merge" type="map_merge" respawn="false" name="map_merge">
    <param name="robot_map_topic" value="/map"/> <!--grid_prob_map-->
    <!--<param name="robot_map_updates_topic" value="grid_prob_map_updates" /> -->
    <param name="robot_namespace" value="tb3"/>
    <param name="merged_map_topic" value="total_map"/>
    <param name="world_frame" value="map"/>
    <param name="known_init_poses" value="true"/>
    <param name="merging_rate" value="0.5"/>
    <param name="discovery_rate" value="0.05"/>
    <param name="estimation_rate" value="10"/>
    <param name="estimation_confidence" value="1.0"/>

    <!-- remap the individual maps from the local map (published by SLAM) to the expanded map (published by the map_expansion node)
    <remap from = "$(arg first_tb3)/map" to = "new_tb3_0_map"/>
    <remap from = "$(arg second_tb3)/map" to = "new_tb3_1_map"/>
    -->
  </node>

</launch>
